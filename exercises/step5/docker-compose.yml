version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
    container_name: elasticsearch-course
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health | grep -v '\"status\":\"red\"'"]

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.0
    container_name: kibana-course
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kibana:5601/"]
    depends_on:
      - elasticsearch

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.1.0
    container_name: apm-course
    ports:
      - "8200:8200"
    environment:
      - output.elasticsearch.hosts=['http://elasticsearch:9200']
      - apm-server.host="0.0.0.0:8200"
      - setup.kibana.host="kibana:5601"
    command: apm-server -e -d "*" -E apm-server.host="0.0.0.0:8200" -E apm-server.expvar.enabled=true
    depends_on:
      - elasticsearch
      - kibana
    healthcheck:
      test: ["CMD", "curl", "-f" ,"http://apm-server:8200/"]

  gateway-service:
    container_name: gateway-service
    restart: always
    build: ./gateway
    image: 'gateway-service:1.0.0'
    environment:
      - FASTIFY_PORT=3000
    ports:
      - '3000:3000'
    expose:
      - '3000'
    links:
      - auth-service
      - tickets-service
      - users-service
      - apm-server
  
  auth-service:
    container_name: auth-service
    restart: always
    build: ./auth
    image: 'auth-service:1.0.0'
    environment:
      - FASTIFY_PORT=3001
    links:
      - mongodb
      - apm-server
  
  tickets-service:
    container_name: tickets-service
    restart: always
    build: ./tickets
    image: 'tickets-service:1.0.0'
    environment:
      - FASTIFY_PORT=3002
    links:
      - mongodb
      - apm-server

  users-service:
    container_name: users-service
    restart: always
    build: ./users
    image: 'users-service:1.0.0'
    environment:
      - FASTIFY_PORT=3003
    links:
      - mongodb
      - apm-server

  mongodb:
    image: 'mongo:latest'
    container_name: mongodb-tickets
    ports:
      - '27018:27017'
    expose:
      - '27018'
  